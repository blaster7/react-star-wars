{"version":3,"sources":["components/PersonPage/PersonFilms/PersonFilms.module.css","components/PersonPage/PersonFilms/PersonFilms.jsx"],"names":["module","exports","PersonFilms","_ref","personFilms","filmsName","setFilmsName","useState","useEffect","filmsHTTPS","map","url","chaneHTTP","response","makeConcurrentRequest","_jsx","className","styles","wrapper","children","list__container","sort","a","b","episode_id","_ref2","title","_jsxs","list__item","item__episode","item__colon","item__title"],"mappings":"4GACAA,EAAOC,QAAU,CAAC,QAAU,6BAA6B,gBAAkB,qCAAqC,WAAa,gCAAgC,cAAgB,mCAAmC,YAAc,iCAAiC,YAAc,iC,kCCA7Q,kDA0CeC,UAtCKC,IAAsB,IAArB,YAAEC,GAAaD,EAElC,MAAOE,EAAWC,GAAgBC,mBAAS,IAa3C,OAXAC,qBAAU,KAER,WACE,MAAMC,EAAaL,EAAYM,KAAIC,GAAOC,YAAUD,KAC9CE,QAAiBC,YAAsBL,GAC7CH,EAAaO,EAEd,EALD,EAKI,GAEH,IAGDE,cAAA,OAAKC,UAAWC,IAAOC,QAAQC,SAC7BJ,cAAA,MAAIC,UAAWC,IAAOG,gBAAgBD,SAElCd,EACGgB,MAAK,CAACC,EAAGC,IAAMD,EAAEE,WAAaD,EAAEC,aAChCd,KAAIe,IAAA,IAAC,MAAEC,EAAK,WAAEF,GAAYC,EAAA,OACzBE,eAAA,MAAIX,UAAWC,IAAOW,WAAWT,SAAA,CAC/BQ,eAAA,QAAMX,UAAWC,IAAOY,cAAcV,SAAA,CAAC,wCAAQK,KAC/CT,cAAA,QAAMC,UAAWC,IAAOa,YAAYX,SAAC,QACrCJ,cAAA,QAAMC,UAAWC,IAAOc,YAAYZ,SAAEO,MAHDF,EAIlC,OAIT,C","file":"static/js/3.4eca360d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PersonFilms_wrapper__1Mwtq\",\"list__container\":\"PersonFilms_list__container__2Zkkw\",\"list__item\":\"PersonFilms_list__item__e4lOm\",\"item__episode\":\"PersonFilms_item__episode__2LxAN\",\"item__colon\":\"PersonFilms_item__colon__j3Jzb\",\"item__title\":\"PersonFilms_item__title__3Qfu_\"};","import PropTypes from 'prop-types';\r\nimport styles from './PersonFilms.module.css';\r\nimport { makeConcurrentRequest, chaneHTTP } from '@utils/network';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst PersonFilms = ({ personFilms }) => {\r\n\r\n  const [filmsName, setFilmsName] = useState([]);\r\n\r\n  useEffect(() => {\r\n\r\n    (async () => {\r\n      const filmsHTTPS = personFilms.map(url => chaneHTTP(url));\r\n      const response = await makeConcurrentRequest(filmsHTTPS);\r\n      setFilmsName(response);\r\n\r\n    })();\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <ul className={styles.list__container}>\r\n        {\r\n          filmsName\r\n            .sort((a, b) => a.episode_id - b.episode_id)\r\n            .map(({ title, episode_id }) => (\r\n              <li className={styles.list__item} key={episode_id}>\r\n                <span className={styles.item__episode}>Эпизод {episode_id}</span>\r\n                <span className={styles.item__colon}> : </span>\r\n                <span className={styles.item__title}>{title}</span>\r\n              </li>\r\n            ))\r\n        }\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nPersonFilms.propTypes = {\r\n  personFilms: PropTypes.array\r\n}\r\n\r\nexport default PersonFilms;\r\n"],"sourceRoot":""}